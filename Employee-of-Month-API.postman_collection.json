{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
    "name": "Intranet Voting API - Complete Collection",
    "description": "Complete API collection for the Employee of the Month voting system with all endpoints including Auth, Employees, Voting, Nominations, Configuration, Audit, and Admin",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "12345678"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\"\n}"
            },
            "url": "{{base_url}}/auth/login",
            "description": "Authenticate and receive a JWT token"
          }
        },
        {
          "name": "Verify Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/auth/verify",
            "description": "Verify if the token is valid"
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"oldPassword\": \"currentpassword\",\n    \"newPassword\": \"newpassword123\"\n}"
            },
            "url": "{{base_url}}/auth/change-password",
            "description": "Change user password (requires authentication)"
          }
        },
        {
          "name": "Reset Password to Default (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/auth/reset-password/{{employeeId}}",
            "description": "Admin only - Reset employee password to default"
          }
        },
        {
          "name": "Bulk Reset Passwords (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"isActive\": true,\n    \"department\": \"Engineering\"\n}"
            },
            "url": "{{base_url}}/auth/bulk-reset-passwords",
            "description": "Admin only - Reset passwords for multiple employees based on filters"
          }
        }
      ],
      "description": "Authentication and password management endpoints"
    },
    {
      "name": "Employees",
      "item": [
        {
          "name": "Get All Employees",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/employees?isActive=true&limit=50",
            "description": "Get all employees with optional filters and pagination"
          }
        },
        {
          "name": "Get Employee by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/employees/{{employeeId}}",
            "description": "Get specific employee by ID"
          }
        },
        {
          "name": "Update Employee",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"department\": \"Engineering\",\n    \"position\": \"Senior Developer\",\n    \"votingGroup\": \"Group A\"\n}"
            },
            "url": "{{base_url}}/employees/{{employeeId}}",
            "description": "Update employee information"
          }
        },
        {
          "name": "Autocomplete Employees",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/employees/autocomplete?q={{searchQuery}}",
            "description": "Search employees for autocomplete with intelligent scoring"
          }
        },
        {
          "name": "Get Eligible Employees",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/eligible-employees",
            "description": "Get eligible employees for nomination (filtered by voting group)"
          }
        },
        {
          "name": "Export Employees to CSV",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/employees/export/csv",
            "description": "Export employees to CSV file with optional filters"
          }
        },
        {
          "name": "Bulk Update Employees (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"employees\": [\n        {\n            \"id\": \"emp-001\",\n            \"votingGroup\": \"Group A\"\n        },\n        {\n            \"id\": \"emp-002\",\n            \"votingGroup\": \"Group B\"\n        }\n    ]\n}"
            },
            "url": "{{base_url}}/employees/bulk-update",
            "description": "Admin only - Bulk update multiple employees"
          }
        },
        {
          "name": "Bulk Update by Filter (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"filters\": {\n        \"department\": \"Engineering\",\n        \"location\": \"New York\"\n    },\n    \"updates\": {\n        \"votingGroup\": \"Group A\"\n    }\n}"
            },
            "url": "{{base_url}}/employees/bulk-update-filter",
            "description": "Admin only - Bulk update employees by filter criteria"
          }
        },
        {
          "name": "Delete All Employees (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/employees/delete-all",
            "description": "Admin only - Delete all employees (use with caution)"
          }
        },
        {
          "name": "Get Voting Groups",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting-groups",
            "description": "Get all unique voting groups"
          }
        },
        {
          "name": "Get Locations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/locations",
            "description": "Get all unique employee locations"
          }
        },
        {
          "name": "Get Departments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/departments",
            "description": "Get all unique departments"
          }
        },
        {
          "name": "Get Positions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/positions",
            "description": "Get all unique positions"
          }
        }
      ],
      "description": "Employee management endpoints"
    },
    {
      "name": "Employee Sync",
      "item": [
        {
          "name": "Get Sync Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/employees/sync/status",
            "description": "Check current sync status between Azure AD and Cosmos DB"
          }
        },
        {
          "name": "Sync All Employees",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/employees/sync",
            "description": "Sync all employees from Azure AD to Cosmos DB"
          }
        },
        {
          "name": "Sync Single Employee",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/employees/{{employeeId}}/sync",
            "description": "Sync a specific employee from Azure AD to Cosmos DB"
          }
        },
        {
          "name": "Update Voting Groups",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"strategy\": \"location\",\n    \"customMapping\": {}\n}"
            },
            "url": "{{base_url}}/employees/voting-groups/update",
            "description": "Update voting groups for all employees based on strategy"
          }
        }
      ],
      "description": "Employee synchronization endpoints"
    },
    {
      "name": "Voting Periods",
      "item": [
        {
          "name": "Get Current Voting Period",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/current-period",
            "description": "Get the current active voting period"
          }
        },
        {
          "name": "Get All Voting Periods",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting-periods",
            "description": "Get all voting periods ordered by most recent first"
          }
        },
        {
          "name": "Create Voting Period (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"year\": 2025,\n    \"month\": 10,\n    \"startDate\": \"2025-10-01T00:00:00Z\",\n    \"endDate\": \"2025-10-31T23:59:59Z\"\n}"
            },
            "url": "{{base_url}}/voting-periods",
            "description": "Admin only - Create a new voting period"
          }
        },
        {
          "name": "Get Voting Period by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/{{votingPeriodId}}",
            "description": "Get specific voting period by ID"
          }
        },
        {
          "name": "Update Voting Period (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"ACTIVE\",\n    \"endDate\": \"2025-10-31T23:59:59Z\"\n}"
            },
            "url": "{{base_url}}/voting/{{votingPeriodId}}",
            "description": "Admin only - Update voting period"
          }
        },
        {
          "name": "Delete Voting Period (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/{{votingPeriodId}}",
            "description": "Admin only - Delete a voting period"
          }
        },
        {
          "name": "Close Voting Period",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/{{votingPeriodId}}/close",
            "description": "Close a voting period and calculate winners"
          }
        },
        {
          "name": "Reset Voting Period (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/{{votingPeriodId}}/reset",
            "description": "Admin only - Reset voting period (delete all nominations and winners)"
          }
        },
        {
          "name": "Get Voting Results",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/{{votingPeriodId}}/results",
            "description": "Get voting results with criteria averages"
          }
        },
        {
          "name": "Get Voting Period Audit History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/{{votingPeriodId}}/audit-history",
            "description": "Get audit history for a voting period"
          }
        },
        {
          "name": "Select Random Winner",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/{{votingPeriodId}}/select-winner",
            "description": "Select a random winner from nominations"
          }
        }
      ],
      "description": "Voting period management and results endpoints"
    },
    {
      "name": "Nominations",
      "item": [
        {
          "name": "Create Nomination",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"nominatedEmployeeId\": \"{{employeeId}}\",\n    \"reason\": \"Outstanding leadership and innovation during Q4 project delivery.\",\n    \"criteria\": {\n        \"communication\": 5,\n        \"innovation\": 4,\n        \"leadership\": 5,\n        \"problemSolving\": 5,\n        \"reliability\": 5,\n        \"teamwork\": 5\n    }\n}"
            },
            "url": "{{base_url}}/nominations",
            "description": "Create a new nomination with criteria scoring"
          }
        },
        {
          "name": "Get Nomination by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/nominations/{{nominationId}}",
            "description": "Get a specific nomination by ID"
          }
        },
        {
          "name": "Update Nomination",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reason\": \"Updated: Exceptional leadership during the crisis.\",\n    \"criteria\": {\n        \"communication\": 5,\n        \"innovation\": 5,\n        \"leadership\": 5,\n        \"problemSolving\": 5,\n        \"reliability\": 5,\n        \"teamwork\": 4\n    }\n}"
            },
            "url": "{{base_url}}/nominations/{{nominationId}}",
            "description": "Update a nomination (reason and/or criteria)"
          }
        },
        {
          "name": "Delete Nomination",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/nominations/{{nominationId}}",
            "description": "Delete a specific nomination"
          }
        },
        {
          "name": "Get My Nominations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/nominations/my",
            "description": "Get current user's nomination for the active period"
          }
        },
        {
          "name": "Get Nominations for Current Period (Paginated)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/nominations/current-period?limit=20",
            "description": "Get paginated nominations for current voting period"
          }
        },
        {
          "name": "Create Bulk Nominations for Testing (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"count\": 50\n}"
            },
            "url": "{{base_url}}/voting/testing/bulk-nominations",
            "description": "Admin only - Create bulk nominations for testing purposes"
          }
        }
      ],
      "description": "Nomination CRUD operations"
    },
    {
      "name": "Winners",
      "item": [
        {
          "name": "Get All Winners",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/winners",
            "description": "Get all winners from closed voting periods"
          }
        },
        {
          "name": "Get Current Winner",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/winners/current",
            "description": "Get the most recent winner"
          }
        },
        {
          "name": "Get Winners Grouped",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/winners/grouped",
            "description": "Get winners grouped by voting group"
          }
        },
        {
          "name": "Get Winner History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/winners/history",
            "description": "Get winner history with optional filters"
          }
        },
        {
          "name": "Get Yearly Winners",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/winners/yearly",
            "description": "Get yearly winners (Employee of the Year)"
          }
        },
        {
          "name": "Mark Winner as Yearly (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/winners/{{winnerId}}/yearly",
            "description": "Admin only - Mark a winner as Employee of the Year"
          }
        },
        {
          "name": "Unmark Yearly Winner (Admin)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/winners/{{winnerId}}/yearly",
            "description": "Admin only - Remove yearly winner designation"
          }
        },
        {
          "name": "Get Employee Results",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/employees/{{employeeId}}/results",
            "description": "Get voting results for a specific employee"
          }
        },
        {
          "name": "Add Winner Reaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"emoji\": \"\ud83c\udf89\"\n}"
            },
            "url": "{{base_url}}/voting/winners/{{winnerId}}/reactions",
            "description": "Add a reaction (emoji) to a winner"
          }
        },
        {
          "name": "Remove Winner Reaction",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/winners/{{winnerId}}/reactions/\ud83c\udf89",
            "description": "Remove a reaction from a winner"
          }
        },
        {
          "name": "Get Winner Reactions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/voting/winners/{{winnerId}}/reactions",
            "description": "Get all reactions for a winner"
          }
        }
      ],
      "description": "Winner management and interaction endpoints"
    },
    {
      "name": "Configuration",
      "item": [
        {
          "name": "Get Eligibility Config",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/configuration/eligibility",
            "description": "Get current eligibility configuration"
          }
        },
        {
          "name": "Update Eligibility Config",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"minimumTenureDays\": 90,\n    \"excludedPositions\": [\"CEO\", \"CFO\"],\n    \"excludedDepartments\": [\"Executive\"]\n}"
            },
            "url": "{{base_url}}/configuration/eligibility",
            "description": "Update eligibility configuration (triggers background employee update)"
          }
        },
        {
          "name": "Reset Eligibility Config",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/configuration/eligibility/reset",
            "description": "Reset eligibility configuration to defaults"
          }
        },
        {
          "name": "Get Voting Group Config",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/configuration/voting-groups",
            "description": "Get current voting group configuration"
          }
        },
        {
          "name": "Update Voting Group Config",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"strategy\": \"location\",\n    \"customMapping\": {}\n}"
            },
            "url": "{{base_url}}/configuration/voting-groups",
            "description": "Update voting group configuration (triggers background employee update)"
          }
        },
        {
          "name": "Reset Voting Group Config",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/configuration/voting-groups/reset",
            "description": "Reset voting group configuration to defaults"
          }
        }
      ],
      "description": "System configuration endpoints for eligibility and voting groups"
    },
    {
      "name": "Audit",
      "item": [
        {
          "name": "Get Audit Logs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/audit/logs?limit=100",
            "description": "Admin only - Get audit logs with optional filters"
          }
        },
        {
          "name": "Get Audit Logs by Date Range",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/audit/logs/date-range?startDate=2025-10-01&endDate=2025-10-31",
            "description": "Admin only - Get audit logs within a date range"
          }
        }
      ],
      "description": "Audit logging and tracking endpoints (Admin only)"
    },
    {
      "name": "System & Admin",
      "item": [
        {
          "name": "System Setup",
          "request": {
            "method": "POST",
            "header": [],
            "url": "{{base_url}}/system/setup",
            "description": "Initialize voting period and setup initial data"
          }
        },
        {
          "name": "Get System Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/system/status",
            "description": "Get overall system status"
          }
        },
        {
          "name": "System Ping",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{base_url}}/system/ping",
            "description": "Ping admin module to check if it's working"
          }
        },
        {
          "name": "Reset Voting Period (System)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": "{{base_url}}/system/voting/{{votingPeriodId}}/reset",
            "description": "Admin only - System-level reset of voting period"
          }
        }
      ],
      "description": "System administration and setup endpoints"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set current date variables for testing",
          "const now = new Date();",
          "const year = now.getFullYear();",
          "const month = (now.getMonth() + 1).toString().padStart(2, '0');",
          "pm.collectionVariables.set('currentVotingPeriodId', `vp-${year}-${month}`);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common tests for all requests",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has correct Content-Type', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Test for success responses",
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    pm.test('Successful response has success field', function () {",
          "        const responseJson = pm.response.json();",
          "        pm.expect(responseJson).to.have.property('success', true);",
          "    });",
          "",
          "    pm.test('Successful response has data field', function () {",
          "        const responseJson = pm.response.json();",
          "        pm.expect(responseJson).to.have.property('data');",
          "    });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:7071/api",
      "description": "Base URL for the API - Local development"
    },
    {
      "key": "votingPeriodId",
      "value": "vp-2025-10",
      "description": "Sample voting period ID for testing"
    },
    {
      "key": "employeeId",
      "value": "emp-001",
      "description": "Sample employee ID for testing"
    },
    {
      "key": "nominationId",
      "value": "nom-001",
      "description": "Sample nomination ID for testing"
    },
    {
      "key": "winnerId",
      "value": "winner-001",
      "description": "Sample winner ID for testing"
    },
    {
      "key": "searchQuery",
      "value": "John",
      "description": "Sample search query for employee autocomplete"
    },
    {
      "key": "authToken",
      "value": "your-jwt-token-here",
      "description": "JWT authentication token - replace with actual token"
    },
    {
      "key": "username",
      "value": "testuser",
      "description": "Username for login"
    },
    {
      "key": "password",
      "value": "password123",
      "description": "Password for login"
    }
  ]
}