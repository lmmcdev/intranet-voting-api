{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
    "name": "Intranet Voting API - NestJS Architecture",
    "description": "Updated API collection for the Employee of the Month voting system with modular NestJS-like structure, Azure sync functionality, and diagnostic endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "12345678"
  },
  "item": [
    {
      "name": "Health & Diagnostics",
      "item": [
        {
          "name": "API Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{intranet_base_url}}/api/health",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "health"]
            },
            "description": "Check if the API is running and healthy"
          }
        },
        {
          "name": "Employee Module Ping",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{intranet_base_url}}/api/employees/ping",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "employees", "ping"]
            },
            "description": "Test if employee module is working correctly"
          }
        },
        {
          "name": "Employee Dependencies Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{intranet_base_url}}/api/employees/dependencies/check",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "employees", "dependencies", "check"]
            },
            "description": "Verify employee module dependencies are loading correctly"
          }
        },
        {
          "name": "Voting Module Ping",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{intranet_base_url}}/api/voting/ping",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "voting", "ping"]
            },
            "description": "Test if voting module is working correctly"
          }
        }
      ],
      "description": "Health check and diagnostic endpoints for all modules"
    },
    {
      "name": "Employee Management",
      "item": [
        {
          "name": "Get All Employees",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/employees",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "employees"]
            },
            "description": "Retrieve all active employees from Azure AD"
          }
        },
        {
          "name": "Get Employee by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/employees/{{employeeId}}",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "employees", "{{employeeId}}"]
            },
            "description": "Get specific employee details by ID from Azure AD"
          }
        },
        {
          "name": "Autocomplete Employees",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/employees/autocomplete?q={{searchQuery}}",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "employees", "autocomplete"],
              "query": [
                {
                  "key": "q",
                  "value": "{{searchQuery}}",
                  "description": "Search query (minimum 2 characters)"
                }
              ]
            },
            "description": "Search employees for autocomplete functionality with intelligent scoring"
          }
        }
      ],
      "description": "Employee management endpoints using Azure AD integration"
    },
    {
      "name": "Employee Sync (Azure to Cosmos)",
      "item": [
        {
          "name": "Get Sync Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/employees/sync/status",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "employees", "sync", "status"]
            },
            "description": "Check current sync status between Azure AD and Cosmos DB"
          },
          "response": [
            {
              "name": "Sync Status Example",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{intranet_base_url}}/api/employees/sync/status",
                  "host": ["{{intranet_base_url}}"],
                  "path": ["api", "employees", "sync", "status"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"data\": {\n        \"azureEmployeeCount\": 150,\n        \"cosmosEmployeeCount\": 147,\n        \"syncNeeded\": true,\n        \"lastSyncTime\": null\n    }\n}"
            }
          ]
        },
        {
          "name": "Sync All Employees",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/employees/sync",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "employees", "sync"]
            },
            "description": "Sync all employees from Azure AD to Cosmos DB. Only creates/updates changed records."
          },
          "response": [
            {
              "name": "Sync Success Example",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{intranet_base_url}}/api/employees/sync",
                  "host": ["{{intranet_base_url}}"],
                  "path": ["api", "employees", "sync"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Employee sync completed\",\n        \"result\": {\n            \"newUsers\": 3,\n            \"updatedUsers\": 2,\n            \"totalProcessed\": 150,\n            \"errors\": []\n        }\n    }\n}"
            }
          ]
        },
        {
          "name": "Sync Single Employee",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/employees/{{employeeId}}/sync",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "employees", "{{employeeId}}", "sync"]
            },
            "description": "Sync a specific employee from Azure AD to Cosmos DB"
          },
          "response": [
            {
              "name": "Single Sync Success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{intranet_base_url}}/api/employees/emp-001/sync",
                  "host": ["{{intranet_base_url}}"],
                  "path": ["api", "employees", "emp-001", "sync"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Employee updated\",\n        \"employee\": {\n            \"id\": \"emp-001\",\n            \"name\": \"John Doe\",\n            \"email\": \"john.doe@company.com\",\n            \"department\": \"Engineering\",\n            \"position\": \"Senior Developer\",\n            \"isActive\": true,\n            \"createdAt\": \"2023-01-15T00:00:00.000Z\",\n            \"updatedAt\": \"2025-09-23T16:30:00.000Z\"\n        }\n    }\n}"
            }
          ]
        }
      ],
      "description": "Azure AD to Cosmos DB synchronization endpoints with change detection"
    },
    {
      "name": "Voting Periods",
      "item": [
        {
          "name": "Get Current Voting Period",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/voting/current",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "voting", "current"]
            },
            "description": "Get the current active voting period"
          }
        },
        {
          "name": "Get All Voting Periods",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/voting",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "voting"]
            },
            "description": "Get all voting periods ordered by most recent first"
          }
        },
        {
          "name": "Get Voting Results",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/voting/{{votingPeriodId}}/results",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "voting", "{{votingPeriodId}}", "results"]
            },
            "description": "Get voting results with criteria averages for a specific voting period"
          },
          "response": [
            {
              "name": "Voting Results with Criteria",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{intranet_base_url}}/api/voting/vp-2025-09/results",
                  "host": ["{{intranet_base_url}}"],
                  "path": ["api", "voting", "vp-2025-09", "results"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"data\": {\n        \"votingPeriod\": {\n            \"id\": \"vp-2025-09\",\n            \"year\": 2025,\n            \"month\": 9,\n            \"status\": \"ACTIVE\"\n        },\n        \"totalNominations\": 3,\n        \"results\": [\n            {\n                \"votingPeriodId\": \"vp-2025-09\",\n                \"employeeId\": \"emp-001\",\n                \"employeeName\": \"John Doe\",\n                \"department\": \"Engineering\",\n                \"position\": \"Senior Developer\",\n                \"nominationCount\": 3,\n                \"percentage\": 100,\n                \"rank\": 1,\n                \"averageCriteria\": {\n                    \"communication\": 4.7,\n                    \"innovation\": 3.3,\n                    \"leadership\": 4.8,\n                    \"problemSolving\": 4.5,\n                    \"reliability\": 4.9,\n                    \"teamwork\": 4.6\n                }\n            }\n        ],\n        \"winner\": {\n            \"votingPeriodId\": \"vp-2025-09\",\n            \"employeeId\": \"emp-001\",\n            \"employeeName\": \"John Doe\",\n            \"department\": \"Engineering\",\n            \"position\": \"Senior Developer\",\n            \"nominationCount\": 3,\n            \"percentage\": 100,\n            \"rank\": 1,\n            \"averageCriteria\": {\n                \"communication\": 4.7,\n                \"innovation\": 3.3,\n                \"leadership\": 4.8,\n                \"problemSolving\": 4.5,\n                \"reliability\": 4.9,\n                \"teamwork\": 4.6\n            }\n        }\n    }\n}"
            }
          ]
        },
        {
          "name": "Get Winners",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/voting/winners",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "voting", "winners"]
            },
            "description": "Get all winners from completed voting periods"
          }
        },
        {
          "name": "Close Voting Period",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/voting/{{votingPeriodId}}/close",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "voting", "{{votingPeriodId}}", "close"]
            },
            "description": "Close a voting period (admin function)"
          }
        }
      ],
      "description": "Voting period management and results endpoints"
    },
    {
      "name": "Nominations",
      "item": [
        {
          "name": "Create Nomination",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"nominatedEmployeeId\": \"{{employeeId}}\",\n    \"reason\": \"Outstanding leadership and innovation during Q3 project delivery. Consistently demonstrates excellence in all areas.\",\n    \"criteria\": {\n        \"communication\": 5,\n        \"innovation\": 4,\n        \"leadership\": 5,\n        \"problemSolving\": 5,\n        \"reliability\": 5,\n        \"teamwork\": 5\n    }\n}"
            },
            "url": {
              "raw": "{{intranet_base_url}}/api/nominations",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "nominations"]
            },
            "description": "Create a new nomination with criteria scoring for the current voting period"
          },
          "response": [
            {
              "name": "Create Nomination Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"nominatedEmployeeId\": \"emp-001\",\n    \"reason\": \"Outstanding performance\",\n    \"criteria\": {\n        \"communication\": 5,\n        \"innovation\": 4,\n        \"leadership\": 5,\n        \"problemSolving\": 5,\n        \"reliability\": 5,\n        \"teamwork\": 5\n    }\n}"
                },
                "url": {
                  "raw": "{{intranet_base_url}}/api/nominations",
                  "host": ["{{intranet_base_url}}"],
                  "path": ["api", "nominations"]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"data\": {\n        \"id\": \"nom-001\",\n        \"nominatedEmployeeId\": \"emp-001\",\n        \"nominatorEmail\": \"user@company.com\",\n        \"votingPeriodId\": \"vp-2025-09\",\n        \"reason\": \"Outstanding performance\",\n        \"criteria\": {\n            \"communication\": 5,\n            \"innovation\": 4,\n            \"leadership\": 5,\n            \"problemSolving\": 5,\n            \"reliability\": 5,\n            \"teamwork\": 5\n        },\n        \"createdAt\": \"2025-09-23T16:30:00Z\"\n    }\n}"
            }
          ]
        },
        {
          "name": "Get Nomination by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/nominations/{{nominationId}}",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "nominations", "{{nominationId}}"]
            },
            "description": "Get a specific nomination by its ID"
          }
        },
        {
          "name": "Update Nomination",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reason\": \"Updated: Exceptional leadership during the crisis and innovative solutions that saved the project timeline.\",\n    \"criteria\": {\n        \"communication\": 5,\n        \"innovation\": 5,\n        \"leadership\": 5,\n        \"problemSolving\": 5,\n        \"reliability\": 5,\n        \"teamwork\": 4\n    }\n}"
            },
            "url": {
              "raw": "{{intranet_base_url}}/api/nominations/{{nominationId}}",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "nominations", "{{nominationId}}"]
            },
            "description": "Update a nomination (reason and/or criteria)"
          }
        },
        {
          "name": "Delete Nomination",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{intranet_base_url}}/api/nominations/{{nominationId}}",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "nominations", "{{nominationId}}"]
            },
            "description": "Delete a specific nomination by ID"
          },
          "response": [
            {
              "name": "Delete Nomination Success",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{intranet_base_url}}/api/nominations/nom-001",
                  "host": ["{{intranet_base_url}}"],
                  "path": ["api", "nominations", "nom-001"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"success\": true,\n    \"data\": {\n        \"message\": \"Nomination deleted successfully\"\n    }\n}"
            }
          ]
        }
      ],
      "description": "Complete CRUD operations for nominations with criteria scoring"
    },
    {
      "name": "Admin",
      "item": [
        {
          "name": "Setup Data",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{intranet_base_url}}/api/setup",
              "host": ["{{intranet_base_url}}"],
              "path": ["api", "setup"]
            },
            "description": "Initialize the current voting period and setup test data"
          }
        }
      ],
      "description": "Administrative endpoints for setup and configuration"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set current date variables for testing",
          "const now = new Date();",
          "const year = now.getFullYear();",
          "const month = (now.getMonth() + 1).toString().padStart(2, '0');",
          "pm.collectionVariables.set('currentVotingPeriodId', `vp-${year}-${month}`);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common tests for all requests",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('Response has correct Content-Type', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Test for success responses",
          "if (pm.response.code >= 200 && pm.response.code < 300) {",
          "    pm.test('Successful response has success field', function () {",
          "        const responseJson = pm.response.json();",
          "        pm.expect(responseJson).to.have.property('success', true);",
          "    });",
          "",
          "    pm.test('Successful response has data field', function () {",
          "        const responseJson = pm.response.json();",
          "        pm.expect(responseJson).to.have.property('data');",
          "    });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "intranet_base_url",
      "value": "http://localhost:7071",
      "description": "Base URL for the Employee of Month API - Local development"
    },
    {
      "key": "votingPeriodId",
      "value": "vp-2025-09",
      "description": "Sample voting period ID for testing"
    },
    {
      "key": "employeeId",
      "value": "emp-001",
      "description": "Sample employee ID for testing nominations"
    },
    {
      "key": "nominationId",
      "value": "nom-001",
      "description": "Sample nomination ID for testing CRUD operations"
    },
    {
      "key": "searchQuery",
      "value": "John",
      "description": "Sample search query for employee autocomplete"
    },
    {
      "key": "authToken",
      "value": "your-jwt-token-here",
      "description": "JWT authentication token - replace with actual token"
    }
  ]
}