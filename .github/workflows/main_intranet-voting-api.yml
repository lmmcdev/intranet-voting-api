name: intranet-voting-api

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "."
  NODE_VERSION: "20"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run security audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Lint code
        run: |
          if npm run lint --silent; then
            echo "Linting passed"
          else
            echo "Linting not configured, skipping..."
          fi
        continue-on-error: true

      - name: Type check
        run: |
          if [ -f "tsconfig.json" ]; then
            npx tsc --noEmit
          else
            echo "TypeScript config not found, skipping type check..."
          fi
        continue-on-error: true

      - name: Build
        run: npm run build --if-present

      - name: Test
        run: npm test --if-present

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: node-app-${{ github.sha }}
          path: |
            ./dist
            ./package*.json
            ./host.json
            ./.funcignore
          retention-days: 30

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app-${{ github.sha }}
          path: .

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_2EB7D28B54C24A1CADDD97A8F50EB72B }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_DD89767F86AF4467A5FA5446BB937599 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_B5E7190341764FB7BD1A2C3FB5FA00C9 }}

      - name: Deploy to Azure Functions
        id: deploy-to-azure
        uses: Azure/functions-action@v1
        with:
          app-name: "intranet-voting-api"
          slot-name: "Production"
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          respect-funcignore: true
          scm-do-build-during-deployment: false

      - name: Health check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 60
          echo "Testing health endpoint..."

          # Try multiple possible health endpoint URLs
          HEALTH_URLS=(
            "https://intranet-voting-api.azurewebsites.net/api/health"
            "https://intranet-voting-api-h4g9csgzgfbdgch7.eastus2-01.azurewebsites.net/api/health"
          )

          for url in "${HEALTH_URLS[@]}"; do
            echo "Trying: $url"
            if curl -f -s --max-time 30 "$url"; then
              echo "✅ Health check passed for: $url"
              exit 0
            else
              echo "❌ Health check failed for: $url"
            fi
          done

          echo "All health checks failed, but deployment may still be successful"
        continue-on-error: true
